/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtWidgets/qformlayout.sip"
#include <qformlayout.h>
#line 105 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtWidgets/qformlayout.sip"
#include <qformlayout.h>
#line 31 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtWidgets/sipQtWidgetsQFormLayoutTakeRowResult.cpp"

#line 26 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtWidgets/qlayoutitem.sip"
#include <qlayoutitem.h>
#line 35 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtWidgets/sipQtWidgetsQFormLayoutTakeRowResult.cpp"


/* Call the instance's destructor. */
extern "C" {static void release_QFormLayout_TakeRowResult(void *, int);}
static void release_QFormLayout_TakeRowResult(void *sipCppV, int)
{
    delete reinterpret_cast< ::QFormLayout::TakeRowResult *>(sipCppV);
}


extern "C" {static void assign_QFormLayout_TakeRowResult(void *, SIP_SSIZE_T, void *);}
static void assign_QFormLayout_TakeRowResult(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QFormLayout::TakeRowResult *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QFormLayout::TakeRowResult *>(sipSrc);
}


extern "C" {static void *array_QFormLayout_TakeRowResult(SIP_SSIZE_T);}
static void *array_QFormLayout_TakeRowResult(SIP_SSIZE_T sipNrElem)
{
    return new  ::QFormLayout::TakeRowResult[sipNrElem];
}


extern "C" {static void *copy_QFormLayout_TakeRowResult(const void *, SIP_SSIZE_T);}
static void *copy_QFormLayout_TakeRowResult(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QFormLayout::TakeRowResult(reinterpret_cast<const  ::QFormLayout::TakeRowResult *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QFormLayout_TakeRowResult(sipSimpleWrapper *);}
static void dealloc_QFormLayout_TakeRowResult(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QFormLayout_TakeRowResult(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QFormLayout_TakeRowResult(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QFormLayout_TakeRowResult(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QFormLayout::TakeRowResult *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new  ::QFormLayout::TakeRowResult();

            return sipCpp;
        }
    }

    {
        const  ::QFormLayout::TakeRowResult* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QFormLayout_TakeRowResult, &a0))
        {
            sipCpp = new  ::QFormLayout::TakeRowResult(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


extern "C" {static PyObject *varget_QFormLayout_TakeRowResult_fieldItem(void *, PyObject *, PyObject *);}
static PyObject *varget_QFormLayout_TakeRowResult_fieldItem(void *sipSelf, PyObject *, PyObject *)
{
     ::QLayoutItem*sipVal;
     ::QFormLayout::TakeRowResult *sipCpp = reinterpret_cast< ::QFormLayout::TakeRowResult *>(sipSelf);

    sipVal = sipCpp->fieldItem;

    return sipConvertFromType(sipVal, sipType_QLayoutItem, NULL);
}


extern "C" {static int varset_QFormLayout_TakeRowResult_fieldItem(void *, PyObject *, PyObject *);}
static int varset_QFormLayout_TakeRowResult_fieldItem(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::QLayoutItem*sipVal;
     ::QFormLayout::TakeRowResult *sipCpp = reinterpret_cast< ::QFormLayout::TakeRowResult *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::QLayoutItem *>(sipForceConvertToType(sipPy,sipType_QLayoutItem,NULL,0,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->fieldItem = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QFormLayout_TakeRowResult_labelItem(void *, PyObject *, PyObject *);}
static PyObject *varget_QFormLayout_TakeRowResult_labelItem(void *sipSelf, PyObject *, PyObject *)
{
     ::QLayoutItem*sipVal;
     ::QFormLayout::TakeRowResult *sipCpp = reinterpret_cast< ::QFormLayout::TakeRowResult *>(sipSelf);

    sipVal = sipCpp->labelItem;

    return sipConvertFromType(sipVal, sipType_QLayoutItem, NULL);
}


extern "C" {static int varset_QFormLayout_TakeRowResult_labelItem(void *, PyObject *, PyObject *);}
static int varset_QFormLayout_TakeRowResult_labelItem(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::QLayoutItem*sipVal;
     ::QFormLayout::TakeRowResult *sipCpp = reinterpret_cast< ::QFormLayout::TakeRowResult *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::QLayoutItem *>(sipForceConvertToType(sipPy,sipType_QLayoutItem,NULL,0,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->labelItem = sipVal;

    return 0;
}

sipVariableDef variables_QFormLayout_TakeRowResult[] = {
    {InstanceVariable, sipName_fieldItem, (PyMethodDef *)varget_QFormLayout_TakeRowResult_fieldItem, (PyMethodDef *)varset_QFormLayout_TakeRowResult_fieldItem, NULL, NULL},
    {InstanceVariable, sipName_labelItem, (PyMethodDef *)varget_QFormLayout_TakeRowResult_labelItem, (PyMethodDef *)varset_QFormLayout_TakeRowResult_labelItem, NULL, NULL},
};

PyDoc_STRVAR(doc_QFormLayout_TakeRowResult, "\1QFormLayout.TakeRowResult()\n"
"QFormLayout.TakeRowResult(QFormLayout.TakeRowResult)");


static pyqt5ClassPluginDef plugin_QFormLayout_TakeRowResult = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtWidgets_QFormLayout_TakeRowResult = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QFormLayout__TakeRowResult,
        {0},
        &plugin_QFormLayout_TakeRowResult
    },
    {
        sipNameNr_TakeRowResult,
        {94, 255, 0},
        0, 0,
        0, 0,
        2, variables_QFormLayout_TakeRowResult,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QFormLayout_TakeRowResult,
    -1,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    init_type_QFormLayout_TakeRowResult,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QFormLayout_TakeRowResult,
    assign_QFormLayout_TakeRowResult,
    array_QFormLayout_TakeRowResult,
    copy_QFormLayout_TakeRowResult,
    release_QFormLayout_TakeRowResult,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
