/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtQuick.h"

#line 28 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtQuick/qsgrendererinterface.sip"
#include <qsgrendererinterface.h>
#line 29 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtQuick/sipQtQuickQSGRendererInterface.cpp"

#line 28 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtQuick/qsgrendererinterface.sip"
#include <qsgrendererinterface.h>
#line 33 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtQuick/sipQtQuickQSGRendererInterface.cpp"
#line 28 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtQuick/qsgrendererinterface.sip"
#include <qsgrendererinterface.h>
#line 36 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtQuick/sipQtQuickQSGRendererInterface.cpp"
#line 26 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtQuick/qquickwindow.sip"
#include <qquickwindow.h>
#line 39 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtQuick/sipQtQuickQSGRendererInterface.cpp"


PyDoc_STRVAR(doc_QSGRendererInterface_graphicsApi, "graphicsApi(self) -> QSGRendererInterface.GraphicsApi");

extern "C" {static PyObject *meth_QSGRendererInterface_graphicsApi(PyObject *, PyObject *);}
static PyObject *meth_QSGRendererInterface_graphicsApi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QSGRendererInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QSGRendererInterface, &sipCpp))
        {
             ::QSGRendererInterface::GraphicsApi sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QSGRendererInterface, sipName_graphicsApi);
                return NULL;
            }

            sipRes = sipCpp->graphicsApi();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QSGRendererInterface_GraphicsApi);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QSGRendererInterface, sipName_graphicsApi, doc_QSGRendererInterface_graphicsApi);

    return NULL;
}


PyDoc_STRVAR(doc_QSGRendererInterface_getResource, "getResource(self, QQuickWindow, QSGRendererInterface.Resource) -> sip.voidptr\n"
"getResource(self, QQuickWindow, str) -> sip.voidptr");

extern "C" {static PyObject *meth_QSGRendererInterface_getResource(PyObject *, PyObject *);}
static PyObject *meth_QSGRendererInterface_getResource(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QQuickWindow* a0;
         ::QSGRendererInterface::Resource a1;
        const  ::QSGRendererInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8E", &sipSelf, sipType_QSGRendererInterface, &sipCpp, sipType_QQuickWindow, &a0, sipType_QSGRendererInterface_Resource, &a1))
        {
            void*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QSGRendererInterface::getResource(a0,a1) : sipCpp->getResource(a0,a1));

            return sipConvertFromVoidPtr(sipRes);
        }
    }

    {
         ::QQuickWindow* a0;
        const char* a1;
        PyObject *a1Keep;
        const  ::QSGRendererInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8AA", &sipSelf, sipType_QSGRendererInterface, &sipCpp, sipType_QQuickWindow, &a0, &a1Keep, &a1))
        {
            void*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QSGRendererInterface::getResource(a0,a1) : sipCpp->getResource(a0,a1));
            Py_DECREF(a1Keep);

            return sipConvertFromVoidPtr(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QSGRendererInterface, sipName_getResource, doc_QSGRendererInterface_getResource);

    return NULL;
}


PyDoc_STRVAR(doc_QSGRendererInterface_shaderType, "shaderType(self) -> QSGRendererInterface.ShaderType");

extern "C" {static PyObject *meth_QSGRendererInterface_shaderType(PyObject *, PyObject *);}
static PyObject *meth_QSGRendererInterface_shaderType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QSGRendererInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QSGRendererInterface, &sipCpp))
        {
             ::QSGRendererInterface::ShaderType sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QSGRendererInterface, sipName_shaderType);
                return NULL;
            }

            sipRes = sipCpp->shaderType();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QSGRendererInterface_ShaderType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QSGRendererInterface, sipName_shaderType, doc_QSGRendererInterface_shaderType);

    return NULL;
}


PyDoc_STRVAR(doc_QSGRendererInterface_shaderCompilationType, "shaderCompilationType(self) -> QSGRendererInterface.ShaderCompilationTypes");

extern "C" {static PyObject *meth_QSGRendererInterface_shaderCompilationType(PyObject *, PyObject *);}
static PyObject *meth_QSGRendererInterface_shaderCompilationType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QSGRendererInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QSGRendererInterface, &sipCpp))
        {
             ::QSGRendererInterface::ShaderCompilationTypes*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QSGRendererInterface, sipName_shaderCompilationType);
                return NULL;
            }

            sipRes = new  ::QSGRendererInterface::ShaderCompilationTypes(sipCpp->shaderCompilationType());

            return sipConvertFromNewType(sipRes,sipType_QSGRendererInterface_ShaderCompilationTypes,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QSGRendererInterface, sipName_shaderCompilationType, doc_QSGRendererInterface_shaderCompilationType);

    return NULL;
}


PyDoc_STRVAR(doc_QSGRendererInterface_shaderSourceType, "shaderSourceType(self) -> QSGRendererInterface.ShaderSourceTypes");

extern "C" {static PyObject *meth_QSGRendererInterface_shaderSourceType(PyObject *, PyObject *);}
static PyObject *meth_QSGRendererInterface_shaderSourceType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QSGRendererInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QSGRendererInterface, &sipCpp))
        {
             ::QSGRendererInterface::ShaderSourceTypes*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QSGRendererInterface, sipName_shaderSourceType);
                return NULL;
            }

            sipRes = new  ::QSGRendererInterface::ShaderSourceTypes(sipCpp->shaderSourceType());

            return sipConvertFromNewType(sipRes,sipType_QSGRendererInterface_ShaderSourceTypes,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QSGRendererInterface, sipName_shaderSourceType, doc_QSGRendererInterface_shaderSourceType);

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QSGRendererInterface(void *, int);}
static void release_QSGRendererInterface(void *sipCppV, int)
{
    delete reinterpret_cast< ::QSGRendererInterface *>(sipCppV);
}


extern "C" {static void dealloc_QSGRendererInterface(sipSimpleWrapper *);}
static void dealloc_QSGRendererInterface(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QSGRendererInterface(sipGetAddress(sipSelf), 0);
    }
}


static PyMethodDef methods_QSGRendererInterface[] = {
    {SIP_MLNAME_CAST(sipName_getResource), meth_QSGRendererInterface_getResource, METH_VARARGS, SIP_MLDOC_CAST(doc_QSGRendererInterface_getResource)},
    {SIP_MLNAME_CAST(sipName_graphicsApi), meth_QSGRendererInterface_graphicsApi, METH_VARARGS, SIP_MLDOC_CAST(doc_QSGRendererInterface_graphicsApi)},
    {SIP_MLNAME_CAST(sipName_shaderCompilationType), meth_QSGRendererInterface_shaderCompilationType, METH_VARARGS, SIP_MLDOC_CAST(doc_QSGRendererInterface_shaderCompilationType)},
    {SIP_MLNAME_CAST(sipName_shaderSourceType), meth_QSGRendererInterface_shaderSourceType, METH_VARARGS, SIP_MLDOC_CAST(doc_QSGRendererInterface_shaderSourceType)},
    {SIP_MLNAME_CAST(sipName_shaderType), meth_QSGRendererInterface_shaderType, METH_VARARGS, SIP_MLDOC_CAST(doc_QSGRendererInterface_shaderType)}
};

static sipEnumMemberDef enummembers_QSGRendererInterface[] = {
    {sipName_CommandListResource, static_cast<int>( ::QSGRendererInterface::CommandListResource), 80},
    {sipName_CommandQueueResource, static_cast<int>( ::QSGRendererInterface::CommandQueueResource), 80},
    {sipName_DeviceResource, static_cast<int>( ::QSGRendererInterface::DeviceResource), 80},
    {sipName_Direct3D12, static_cast<int>( ::QSGRendererInterface::Direct3D12), 79},
    {sipName_GLSL, static_cast<int>( ::QSGRendererInterface::GLSL), 85},
    {sipName_HLSL, static_cast<int>( ::QSGRendererInterface::HLSL), 85},
    {sipName_OfflineCompilation, static_cast<int>( ::QSGRendererInterface::OfflineCompilation), 81},
    {sipName_OpenGL, static_cast<int>( ::QSGRendererInterface::OpenGL), 79},
    {sipName_OpenVG, static_cast<int>( ::QSGRendererInterface::OpenVG), 79},
    {sipName_PainterResource, static_cast<int>( ::QSGRendererInterface::PainterResource), 80},
    {sipName_RuntimeCompilation, static_cast<int>( ::QSGRendererInterface::RuntimeCompilation), 81},
    {sipName_ShaderByteCode, static_cast<int>( ::QSGRendererInterface::ShaderByteCode), 83},
    {sipName_ShaderSourceFile, static_cast<int>( ::QSGRendererInterface::ShaderSourceFile), 83},
    {sipName_ShaderSourceString, static_cast<int>( ::QSGRendererInterface::ShaderSourceString), 83},
    {sipName_Software, static_cast<int>( ::QSGRendererInterface::Software), 79},
    {sipName_Unknown, static_cast<int>( ::QSGRendererInterface::Unknown), 79},
    {sipName_UnknownShadingLanguage, static_cast<int>( ::QSGRendererInterface::UnknownShadingLanguage), 85},
};


static pyqt5ClassPluginDef plugin_QSGRendererInterface = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtQuick_QSGRendererInterface = {
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QSGRendererInterface,
        {0},
        &plugin_QSGRendererInterface
    },
    {
        sipNameNr_QSGRendererInterface,
        {0, 0, 1},
        5, methods_QSGRendererInterface,
        17, enummembers_QSGRendererInterface,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QSGRendererInterface,
    0,
    0,
    0,
    release_QSGRendererInterface,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
