/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtMultimedia.h"

#line 26 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtMultimedia/qaudio.sip"
#include <qaudio.h>
#line 29 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtMultimedia/sipQtMultimediaQAudio.cpp"



PyDoc_STRVAR(doc_QAudio_convertVolume, "convertVolume(float, QAudio.VolumeScale, QAudio.VolumeScale) -> float");

extern "C" {static PyObject *meth_QAudio_convertVolume(PyObject *, PyObject *);}
static PyObject *meth_QAudio_convertVolume(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::QAudio::VolumeScale a1;
         ::QAudio::VolumeScale a2;

        if (sipParseArgs(&sipParseErr, sipArgs, "dEE", &a0, sipType_QAudio_VolumeScale, &a1, sipType_QAudio_VolumeScale, &a2))
        {
             ::qreal sipRes;

            sipRes =  ::QAudio::convertVolume(a0,a1,a2);

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_convertVolume, doc_QAudio_convertVolume);

    return NULL;
}


static PyMethodDef methods_QAudio[] = {
    {SIP_MLNAME_CAST(sipName_convertVolume), meth_QAudio_convertVolume, METH_VARARGS, SIP_MLDOC_CAST(doc_QAudio_convertVolume)}
};

static sipEnumMemberDef enummembers_QAudio[] = {
    {sipName_AccessibilityRole, static_cast<int>( ::QAudio::AccessibilityRole), 9},
    {sipName_ActiveState, static_cast<int>( ::QAudio::ActiveState), 10},
    {sipName_AlarmRole, static_cast<int>( ::QAudio::AlarmRole), 9},
    {sipName_AudioInput, static_cast<int>( ::QAudio::AudioInput), 8},
    {sipName_AudioOutput, static_cast<int>( ::QAudio::AudioOutput), 8},
    {sipName_CubicVolumeScale, static_cast<int>( ::QAudio::CubicVolumeScale), 11},
    {sipName_CustomRole, static_cast<int>( ::QAudio::CustomRole), 9},
    {sipName_DecibelVolumeScale, static_cast<int>( ::QAudio::DecibelVolumeScale), 11},
    {sipName_FatalError, static_cast<int>( ::QAudio::FatalError), 7},
    {sipName_GameRole, static_cast<int>( ::QAudio::GameRole), 9},
    {sipName_IOError, static_cast<int>( ::QAudio::IOError), 7},
    {sipName_IdleState, static_cast<int>( ::QAudio::IdleState), 10},
    {sipName_InterruptedState, static_cast<int>( ::QAudio::InterruptedState), 10},
    {sipName_LinearVolumeScale, static_cast<int>( ::QAudio::LinearVolumeScale), 11},
    {sipName_LogarithmicVolumeScale, static_cast<int>( ::QAudio::LogarithmicVolumeScale), 11},
    {sipName_MusicRole, static_cast<int>( ::QAudio::MusicRole), 9},
    {sipName_NoError, static_cast<int>( ::QAudio::NoError), 7},
    {sipName_NotificationRole, static_cast<int>( ::QAudio::NotificationRole), 9},
    {sipName_OpenError, static_cast<int>( ::QAudio::OpenError), 7},
    {sipName_RingtoneRole, static_cast<int>( ::QAudio::RingtoneRole), 9},
    {sipName_SonificationRole, static_cast<int>( ::QAudio::SonificationRole), 9},
    {sipName_StoppedState, static_cast<int>( ::QAudio::StoppedState), 10},
    {sipName_SuspendedState, static_cast<int>( ::QAudio::SuspendedState), 10},
    {sipName_UnderrunError, static_cast<int>( ::QAudio::UnderrunError), 7},
    {sipName_UnknownRole, static_cast<int>( ::QAudio::UnknownRole), 9},
    {sipName_VideoRole, static_cast<int>( ::QAudio::VideoRole), 9},
    {sipName_VoiceCommunicationRole, static_cast<int>( ::QAudio::VoiceCommunicationRole), 9},
};


static pyqt5ClassPluginDef plugin_QAudio = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtMultimedia_QAudio = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_NAMESPACE,
        sipNameNr_QAudio,
        {0},
        &plugin_QAudio
    },
    {
        sipNameNr_QAudio,
        {0, 0, 1},
        1, methods_QAudio,
        27, enummembers_QAudio,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
