/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtMacExtras.h"

#line 26 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/sip/QtMacExtras/qtmac.sip"
#include <QtMac>
#line 29 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtMacExtras/sipQtMacExtrasQtMac.cpp"

#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 33 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtMacExtras/sipQtMacExtrasQtMac.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 36 "/Users/alan/PycharmProjects/ProjectPyQt/PyQt5_gpl-5.11.3/QtMacExtras/sipQtMacExtrasQtMac.cpp"


PyDoc_STRVAR(doc_QtMac_isMainWindow, "isMainWindow(QWindow) -> bool");

extern "C" {static PyObject *meth_QtMac_isMainWindow(PyObject *, PyObject *);}
static PyObject *meth_QtMac_isMainWindow(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QWindow* a0;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8", sipType_QWindow, &a0))
        {
            bool sipRes;

            sipRes =  ::QtMac::isMainWindow(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_isMainWindow, doc_QtMac_isMainWindow);

    return NULL;
}


PyDoc_STRVAR(doc_QtMac_badgeLabelText, "badgeLabelText() -> str");

extern "C" {static PyObject *meth_QtMac_badgeLabelText(PyObject *, PyObject *);}
static PyObject *meth_QtMac_badgeLabelText(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::QString*sipRes;

            sipRes = new  ::QString( ::QtMac::badgeLabelText());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_badgeLabelText, doc_QtMac_badgeLabelText);

    return NULL;
}


PyDoc_STRVAR(doc_QtMac_setBadgeLabelText, "setBadgeLabelText(str)");

extern "C" {static PyObject *meth_QtMac_setBadgeLabelText(PyObject *, PyObject *);}
static PyObject *meth_QtMac_setBadgeLabelText(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;

        if (sipParseArgs(&sipParseErr, sipArgs, "J1", sipType_QString,&a0, &a0State))
        {
             ::QtMac::setBadgeLabelText(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_setBadgeLabelText, doc_QtMac_setBadgeLabelText);

    return NULL;
}


static PyMethodDef methods_QtMac[] = {
    {SIP_MLNAME_CAST(sipName_badgeLabelText), meth_QtMac_badgeLabelText, METH_VARARGS, SIP_MLDOC_CAST(doc_QtMac_badgeLabelText)},
    {SIP_MLNAME_CAST(sipName_isMainWindow), meth_QtMac_isMainWindow, METH_VARARGS, SIP_MLDOC_CAST(doc_QtMac_isMainWindow)},
    {SIP_MLNAME_CAST(sipName_setBadgeLabelText), meth_QtMac_setBadgeLabelText, METH_VARARGS, SIP_MLDOC_CAST(doc_QtMac_setBadgeLabelText)}
};


static pyqt5ClassPluginDef plugin_QtMac = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtMacExtras_QtMac = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_NAMESPACE,
        sipNameNr_QtMac,
        {0},
        &plugin_QtMac
    },
    {
        sipNameNr_QtMac,
        {0, 0, 1},
        3, methods_QtMac,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
